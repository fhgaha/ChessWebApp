@model ChessWebApp.Board

<meta name="viewport" content="width=device-width, initial-scale=1">
<style>

    .board-zone {
        border-collapse: collapse;
        /*to center the whole table:*/
        margin-left: auto;
        margin-right: auto;
    }

        .board-zone th {
            padding: .5em;
            font-size: large;
            text-align: center;
        }

        .board-zone td {
            width: 50px;
            height: 50px;
            padding: 0;
        }

        .board-zone button {
            border: none;
            background-color: transparent;
            height: 100%;
            width: 100%;
        }

    .rank-number {
    }

    .file-letter {
    }

    .oneSquare {
        padding: 0;
        height: 100%;
        width: 100%;
    }

    img {
        padding: 0px;
    }
</style>

@{
    ViewData["Title"] = "Index";

    string[] squareImgNames = { "lightSquare.png", "darkSquare.png" };
    var squares = Model.BoardSquares;
}

<form>

    <table class="board-zone">
        <tbody>

            @for (int i = 0; i < squares.GetLength(0); i++)
            {
                <tr>

                    @{ var rank = Constants.BoardLength - i + " ";}

                    <th class="rank-number">@rank</th>

                    @for (int j = 0; j < squares.GetLength(1); j++)
                    {
                        var squareColor = squares[i, j].SquareColor == SquareColor.Light ? "#eee" : "#aaa";   //black and white;

                        if (Model.LocationSquareMap[squares[i, j].Location].IsValid)
                        {
                            squareColor = "#5c9c6f";    //green
                        }

                        <td style="background: @squareColor;">
                            <div class="oneSquare" id="@squares[i, j].Location.File@squares[i, j].Location.Rank">
                                <button class="square-button" name="location"
                                        value="@squares[i, j].Location.File@squares[i, j].Location.Rank"
                                        asp-controller="Home" asp-action="HandleButtonClick">
                                    @if (squares[i, j].IsOccupied)
                                    {
                                        var piece = squares[i, j].CurrentPiece;

                                        string pieceColor = piece.PieceColor == PieceColor.Light ? "white" : "black";
                                        string pieceClass = piece.GetType().Name;
                                        string fileType = ".png";

                                        <img width="40" src="~/img/pieceImgs/@pieceColor@pieceClass@fileType" />
                                    }
                                </button>
                            </div>
                        </td>
                    }
                </tr>
            }

            <tr>
                <th></th>
                @foreach (var file in Enum.GetValues(typeof(File)))
                {
                    <th class="file-letter">@file</th>
                }
            </tr>

        </tbody>
    </table>
</form>


<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#promotionModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal" id="promotionModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">

                @{
                    //color is always white
                    var color = Model.IsWhitesMove ? PieceColor.Light : PieceColor.Dark;
                    var pieces = new List<AbstractPiece>
                                            {
                        new Queen(color) { Location = new Location(File.A, 1)},
                        new Knight(color) { Location = new Location(File.A, 1)},
                        new Rook(color) { Location = new Location(File.A, 1)},
                        new Bishop(color) { Location = new Location(File.A, 1)}
                    };
                }

                <partial name="_pickPieceCard" model="@pieces" />

            </div>
        </div>
    </div>
</div>