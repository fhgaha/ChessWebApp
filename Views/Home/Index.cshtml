@model ChessWebApp.Board

<meta name="viewport" content="width=device-width, initial-scale=1">
<style>

    .board-zone {
        border-collapse: collapse;

        /*to center the whole table:*/
        margin-left: auto;
        margin-right: auto;
    }

        .board-zone th {
            padding: .5em;
            font-size: large;
            text-align: center;
        }

        .board-zone td {
            width: 50px;
            height: 50px;
            padding: 0;
        }

    .rank-number {
    }

    .file-letter {
    }
</style>

@{
    ViewData["Title"] = "Index";

    Square[,] boardsquares = Model.BoardSquares;
    string[] squareImgNames = { "lightSquare.png", "darkSquare.png" };
}

<form>

    <table class="board-zone">
        <tbody>

            @for (int i = 0; i < boardsquares.GetLength(0); i++)
            {
                <tr>

                    @{
                        var rank = Board.BoardLength - i + " ";
                    }

                    <th class="rank-number">@rank</th>

                    @for (int j = 0; j < boardsquares.GetLength(1); j++)
                    {
                        var square = boardsquares[i, j].SquareColor;
                        var squareColor = (i + j) % 2 == 0 ? "#aaa" : "#eee";

                        <td style="background: @squareColor; ">

                            @if (boardsquares[i, j].IsOccupied)
                            {

                                var piece = boardsquares[i, j].CurrentPiece;

                                string pieceColor = piece.PieceColor == PieceColor.Light ? "white" : "black";
                                string pieceClass = piece.GetType().Name;
                                string fileType = ".png";

                                <img width="100%" src="~/img/pieceImgs/@pieceColor@pieceClass@fileType" />

                            }
                        </td>




                    }

                </tr>

            }

            <tr>
                <th></th>
                @foreach (var file in Enum.GetValues(typeof(File)))
                {
                    <th class="file-letter">@file</th>
                }
            </tr>

        </tbody>
    </table>
</form>


